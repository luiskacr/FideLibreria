/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Color;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import logica.Vendedor;
import logica.VendedorBD;

/**
 *
 * @author luis_
 */
public class FrameVendedores extends javax.swing.JInternalFrame {

    Color fondoBg = new Color(43, 43, 43); //Gris Oscuro
    Color fondoPanel = new Color(69, 73, 74); //Gris Medio
    Color Texto = new Color(102, 102, 102); //Gris Claro

    VendedorBD vendedorDB = new VendedorBD();
    DefaultTableModel modelo = new DefaultTableModel();
    Notificaciones mensaje = new Notificaciones();

    int id;

    public FrameVendedores() {
        initComponents();
        //Oculta el campo de la contraseña en la tabla
        jTVendedores.getTableHeader().getColumnModel().getColumn(7).setMinWidth(0);
        jTVendedores.getTableHeader().getColumnModel().getColumn(7).setMaxWidth(0);

        listar();
    }

    private void listar() {
        List<Vendedor> lista = vendedorDB.listar();
        modelo = (DefaultTableModel) jTVendedores.getModel();
        Object[] tabla = new Object[8];
        for (int i = 0; i < lista.size(); i++) {
            tabla[0] = lista.get(i).getIdVendedor();
            tabla[1] = lista.get(i).getCedVendedor();
            tabla[2] = lista.get(i).getNombreVendedor();
            tabla[3] = lista.get(i).getApellidoVendedor();
            tabla[4] = lista.get(i).isEstado();
            tabla[5] = lista.get(i).isPermisos();
            tabla[6] = lista.get(i).getUserVendedor();
            tabla[7] = lista.get(i).getPassVendedor();
            modelo.addRow(tabla);
        }
        jTVendedores.setModel(modelo);
        
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTCedula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTUsuario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jBLimpiar = new javax.swing.JButton();
        jBBuscar = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBAgregar = new javax.swing.JButton();
        jPPass = new javax.swing.JPasswordField();
        jREActivo = new javax.swing.JRadioButton();
        jREDesactivado = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jRPActivado = new javax.swing.JRadioButton();
        jRPDesactivado = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTVendedores = new javax.swing.JTable();

        setBorder(null);
        setClosable(true);
        setTitle("Vendedores");

        jPanel1.setBackground(fondoPanel);
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cedula");

        jTCedula.setBackground(Texto);
        jTCedula.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jTCedula.setForeground(new java.awt.Color(255, 255, 255));
        jTCedula.setBorder(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");

        jTNombre.setBackground(Texto);
        jTNombre.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jTNombre.setForeground(new java.awt.Color(255, 255, 255));
        jTNombre.setBorder(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Apellido");

        jTApellido.setBackground(Texto);
        jTApellido.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jTApellido.setForeground(new java.awt.Color(255, 255, 255));
        jTApellido.setBorder(null);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Permisos:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Usuario:");

        jTUsuario.setBackground(Texto);
        jTUsuario.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jTUsuario.setForeground(new java.awt.Color(255, 255, 255));
        jTUsuario.setBorder(null);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Contraseña:");

        jBLimpiar.setBackground(fondoPanel);
        jBLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jBLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        jBLimpiar.setText("Limpiar");
        jBLimpiar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBLimpiar.setFocusPainted(false);
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jBBuscar.setBackground(fondoPanel);
        jBBuscar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jBBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jBBuscar.setText("Buscar");
        jBBuscar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBuscar.setFocusPainted(false);
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jBActualizar.setBackground(fondoPanel);
        jBActualizar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jBActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jBActualizar.setText("Actualizar");
        jBActualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBActualizar.setFocusPainted(false);
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        jBEliminar.setBackground(fondoPanel);
        jBEliminar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jBEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jBEliminar.setText("Eliminar ");
        jBEliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBEliminar.setFocusPainted(false);
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBAgregar.setBackground(fondoPanel);
        jBAgregar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jBAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jBAgregar.setText("Agregar");
        jBAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAgregar.setFocusPainted(false);
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jREActivo.setText("Activo ");
        jREActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jREActivoActionPerformed(evt);
            }
        });

        jREDesactivado.setText("Desactivado");
        jREDesactivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jREDesactivadoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Estado");

        jRPActivado.setText("Activados");
        jRPActivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRPActivadoActionPerformed(evt);
            }
        });

        jRPDesactivado.setText("Desactivados");
        jRPDesactivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRPDesactivadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(jTCedula)
                                    .addComponent(jTApellido))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(jPPass)
                                    .addComponent(jRPActivado)))
                            .addComponent(jREActivo)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(160, 160, 160)
                                .addComponent(jREDesactivado))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jBLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRPDesactivado)
                            .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jREActivo)
                            .addComponent(jREDesactivado)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jPPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jRPActivado)
                            .addComponent(jRPDesactivado))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTVendedores.setAutoCreateRowSorter(true);
        jTVendedores.setBackground(Texto);
        jTVendedores.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTVendedores.setForeground(new java.awt.Color(255, 255, 255));
        jTVendedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Ced Vendedor", "Nombre", "Apellido", "Estado", "Permisos", "Usuario", "Contraseña"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTVendedores.setFillsViewportHeight(true);
        jTVendedores.setGridColor(new java.awt.Color(204, 204, 204));
        jTVendedores.setInheritsPopupMenu(true);
        jTVendedores.setShowGrid(true);
        jTVendedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTVendedoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTVendedores);
        if (jTVendedores.getColumnModel().getColumnCount() > 0) {
            jTVendedores.getColumnModel().getColumn(0).setResizable(false);
            jTVendedores.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTVendedores.getColumnModel().getColumn(1).setResizable(false);
            jTVendedores.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTVendedores.getColumnModel().getColumn(2).setResizable(false);
            jTVendedores.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTVendedores.getColumnModel().getColumn(3).setResizable(false);
            jTVendedores.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTVendedores.getColumnModel().getColumn(4).setResizable(false);
            jTVendedores.getColumnModel().getColumn(4).setPreferredWidth(10);
            jTVendedores.getColumnModel().getColumn(5).setResizable(false);
            jTVendedores.getColumnModel().getColumn(5).setPreferredWidth(25);
            jTVendedores.getColumnModel().getColumn(6).setResizable(false);
            jTVendedores.getColumnModel().getColumn(6).setPreferredWidth(75);
            jTVendedores.getColumnModel().getColumn(7).setResizable(false);
            jTVendedores.getColumnModel().getColumn(7).setPreferredWidth(0);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        limpiarTabla();
        listar();
        limpiar();
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        dispose();
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_jBActualizarActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
        incluir();
    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jREActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jREActivoActionPerformed
        if (jREActivo.isSelected()) {
            jREDesactivado.setSelected(false);
        }
    }//GEN-LAST:event_jREActivoActionPerformed

    private void jREDesactivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jREDesactivadoActionPerformed
        if (jREDesactivado.isSelected()) {
            jREActivo.setSelected(false);
        }

    }//GEN-LAST:event_jREDesactivadoActionPerformed

    private void jRPActivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRPActivadoActionPerformed
        if (jRPActivado.isSelected()) {
            jRPDesactivado.setSelected(false);
        }
    }//GEN-LAST:event_jRPActivadoActionPerformed

    private void jRPDesactivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRPDesactivadoActionPerformed
        if (jRPDesactivado.isSelected()) {
            jRPActivado.setSelected(false);
        }
    }//GEN-LAST:event_jRPDesactivadoActionPerformed

    private void jTVendedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTVendedoresMouseClicked
        int fila = jTVendedores.getSelectedRow();
        if (fila == -1) {
            mensaje.error("Debe de seleccionar una Fila");
        } else {
            this.id = Integer.parseInt(jTVendedores.getValueAt(fila, 0).toString());
            int cedula = Integer.parseInt(jTVendedores.getValueAt(fila, 1).toString());
            String nombre = jTVendedores.getValueAt(fila, 2).toString();
            String apellido = jTVendedores.getValueAt(fila, 3).toString();
            boolean estado;
            boolean permisos;
            if (jTVendedores.getValueAt(fila, 5).toString().equals("true")) {
                estado = true;
            } else {
                estado = false;
            }
            if (jTVendedores.getValueAt(fila, 5).toString().equals("true")) {
                permisos = true;
            } else {
                permisos = false;
            }
            String usuario = jTVendedores.getValueAt(fila, 6).toString();
            String pass = jTVendedores.getValueAt(fila, 7).toString();

            jTCedula.setText(cedula + "");
            jTNombre.setText(nombre);
            jTApellido.setText(apellido);
            if (estado) {
                jREActivo.setSelected(true);
                jREDesactivado.setSelected(false);
            } else {
                jREActivo.setSelected(false);
                jREDesactivado.setSelected(true);
            }
            if (permisos) {
                jRPActivado.setSelected(true);
                jRPDesactivado.setSelected(false);
            } else {
                jRPActivado.setSelected(false);
                jRPDesactivado.setSelected(true);
            }
            jTUsuario.setText(usuario);
            jPPass.setText(pass);
        }
    }//GEN-LAST:event_jTVendedoresMouseClicked

    private void incluir() {
        if (camposVacios()) {
            if (validaNunmeros()) {
                int cedula = Integer.parseInt(jTCedula.getText());
                String nombre = jTNombre.getText();
                String apellido = jTApellido.getText();
                int estado;
                int permisos;
                if (jREActivo.isSelected()) {
                    estado = 1;
                } else {
                    estado = 2;
                }
                if (jRPActivado.isSelected()) {
                    permisos = 1;
                } else {
                    permisos = 2;
                }
                String usuario = jTUsuario.getText();
                String pass = String.valueOf(jPPass.getPassword());

                Object[] agregar = new Object[7];
                agregar[0] = cedula;
                agregar[1] = nombre;
                agregar[2] = apellido;
                agregar[3] = estado;
                agregar[4] = permisos;
                agregar[5] = usuario;
                agregar[6] = pass;

                vendedorDB.incluir(agregar);

                limpiarTabla();
                listar();
                limpiar();

            } else {
                mensaje.error("El campos de Cedula no es un Numero");
            }

        } else {
            mensaje.error("Algun campo se encuentra Vacio");
        }

    }

    private void actualizar() {
        int fila = jTVendedores.getSelectedRow();
        if (fila == -1) {
            mensaje.error("Debe de seleccionar una Fila");
        } else {
            if (camposVacios()) {
                if (validaNunmeros()) {
                    int cedula = Integer.parseInt(jTCedula.getText());
                    String nombre = jTNombre.getText();
                    String apellido = jTApellido.getText();
                    int estado;
                    int permisos;
                    if (jREActivo.isSelected()) {
                        estado = 1;
                    } else {
                        estado = 2;
                    }
                    if (jRPActivado.isSelected()) {
                        permisos = 1;
                    } else {
                        permisos = 2;
                    }
                    String usuario = jTUsuario.getText();
                    String pass = String.valueOf(jPPass.getPassword());

                    Object[] actualizar = new Object[8];
                    actualizar[0] = cedula;
                    actualizar[1] = nombre;
                    actualizar[2] = apellido;
                    actualizar[3] = estado;
                    actualizar[4] = permisos;
                    actualizar[5] = usuario;
                    actualizar[6] = pass;
                    actualizar[7] = id;

                    vendedorDB.actualizar(actualizar);
                    limpiarTabla();
                    listar();
                    limpiar();
                } else {
                    mensaje.error("El campos de Cedula no es un Numero");
                }
            } else {
                mensaje.error("Algun campo se encuentra Vacio");
            }
        }
    }

    private void eliminar() {
        int fila = jTVendedores.getSelectedRow();
        if (fila == -1) {
            mensaje.error("Debe de seleccionar una Fila");
        } else {
            String nombre = jTNombre.getText();
            String Apellido = jTApellido.getText();
            boolean consulta = mensaje.confirmar("Desea continuar con la eliminacion del Vendedor " + nombre + " " + Apellido, "Seleccione una Opcion");
            if (consulta) {
                vendedorDB.eliminar(id);
                limpiarTabla();
                listar();
                limpiar();
            } else {
                limpiarTabla();
                listar();
                limpiar();
            }
        }
    }

    private boolean camposVacios() {
        if (jTCedula.getText().length() == 0) {
            return false;
        } else if (jTNombre.getText().length() == 0) {
            return false;
        } else if (jTApellido.getText().length() == 0) {
            return false;
        } else if (jTUsuario.getText().length() == 0) {
            return false;
        } else {
            return true;
        }
    }

    private boolean validaNunmeros() {
        try {
            Integer.parseInt(jTCedula.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    private void limpiar() {
        jTCedula.setText("");
        jTNombre.setText("");
        jTApellido.setText("");
        jREActivo.setSelected(false);
        jREDesactivado.setSelected(false);
        jRPActivado.setSelected(false);
        jRPDesactivado.setSelected(false);
        jTUsuario.setText("");
        jPPass.setText("");
    }

    private void limpiarTabla() {
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i--;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPasswordField jPPass;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jREActivo;
    private javax.swing.JRadioButton jREDesactivado;
    private javax.swing.JRadioButton jRPActivado;
    private javax.swing.JRadioButton jRPDesactivado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTApellido;
    private javax.swing.JTextField jTCedula;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JTextField jTUsuario;
    private javax.swing.JTable jTVendedores;
    // End of variables declaration//GEN-END:variables
}
